import requests
import os
import re
import json
from PyQt5 import QtWidgets
from PyQt5.QtCore import QUrl
from PyQt5.QtWidgets import QApplication, QPushButton, QVBoxLayout, QWidget
from PyQt5.QtGui import QDesktopServices

# GitHub repository where the script is stored
OWNER = "username"
REPO = "my_repo"

# Name and path of the script
SCRIPT_NAME = "my_script.py"
SCRIPT_PATH = "./my_script.py"

# URL of the latest release in the repository
LATEST_RELEASE_URL = f"https://api.github.com/repos/{OWNER}/{REPO}/releases/latest"

# Check for the latest release in the repository
response = requests.get(LATEST_RELEASE_URL)
latest_release = json.loads(response.text)

# Compare the local version of the script with the latest version
local_script = open(SCRIPT_PATH, "r").read()
script_url = latest_release["assets"][0]["browser_download_url"]
response = requests.get(script_url)
latest_script = response.text
if local_script != latest_script:
    # Create a GUI application
    app = QApplication([])
    app.setStyle("Fusion")

    # Create a window
    window = QWidget()
    window.setWindowTitle("Update Available")
    window.setGeometry(400, 400, 200, 100)

    # Create a layout for the window
    layout = QVBoxLayout()

    # Create a button for downloading the update
    download_button = QPushButton("Download Update")
    download_button.clicked.connect(lambda: QDesktopServices.openUrl(QUrl(script_url)))
    layout.addWidget(download_button)

    # Add the layout to the window and show it
    window.setLayout(layout)
    window.show()

    # Run the application
    app.exec_()

# Save the updated script and close the program
if local_script != latest_script:
    with open(SCRIPT_PATH, "w") as f:
        f.write(latest_script)

    # Check for new import dependencies in the updated script
    local_imports = set(re.findall(r"import (\w+)", local_script))
    latest_imports = set(re.findall(r"import (\w+)", latest_script))
    new_imports = latest_imports - local_imports
    if new_imports:
        # Install the new import dependencies
        for module in new_imports:
            os.system(f"pip install {module}")

    os.chmod(SCRIPT_PATH, 0o755)
